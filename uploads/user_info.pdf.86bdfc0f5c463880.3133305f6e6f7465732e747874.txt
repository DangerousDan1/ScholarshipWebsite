Algorithmic Problems
Decision problems:
	easier to analyze, but just as hard to solve
  computation/solution:
	instance of problem -> able to solve(yes/no)
	implementing solution:
	  Automata: DFA, NFA, e-NFA, 2DFA, PDA(non-deterministic), Turing Machine
	  Syntactically(syntax): regular expressions, context free grammar, 

lots of constructions
  product construction (ex in midterm 1 answer key)
	shows intersection of two regular languages is regular
		used logical argument to prove union is regular
  subset construction (ex in midterm 2 answer key)
	shows that from an nfa, we can construct an equivalent dfa
  convert e-NFA to NFA (notes)
  convert reg expre to e-NFA: Kleene's thm (NOTES)
  convert DFA to reg express: Kleene's thm (NOTES)
  minimizing # of states (HANDOUTS)
  DFA to CFG (HANDOUTS)
  CFG to Chomsky Normal Form ()
  CFG to PDA
  CKY

Tools
  set theory
  cardinality

proofs
  closure stuff
  pumping lemma
  daemon adversary 
  myhill nerode - can use to show language is regular (NOTES)
  complement of cfl isn't necessarily cfl
    they aren't closed under intersection or complement

pdas
  
set of all subsets of sigma star is uncountable

final: 

first two questions: on the midterm - cardinality etc
a logical problem related to closure properties
write formal definition of regular language given in class
how do u prove langs are reg and not reg
product construction
dfa
simple definition of language -> come up with dfa
do dfa for a lang that's a little more challenging (Bug have seen before)
nfa
subset construction
show basic understanding of pumping lemma (implementation)
daemon adversary game
knowing reversal of regular lang is reg helps in doing pumping lemma proofs
what's the minimum pumping length
state minimization problem
what is the myhill nerode relation
what does the myhill nerode relation say
cfg for some simple languages
cfg for tricky language but shown in class (notes)
give state diagram of pda of simple language
cfg to pda
do cky algorithm to determine if string is in grammar (string in chomsky already)
convert simple strings to chomsky normal form
3 regular expressions to write
what is a universal turing machine
asked to do halting problem?

  
  
	
